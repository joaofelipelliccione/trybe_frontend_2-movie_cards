{"ast":null,"code":"import _classCallCheck from\"/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_2-movie_cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_2-movie_cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_2-movie_cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_2-movie_cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import MovieCard from'./MovieCard';var MovieList=/*#__PURE__*/function(_React$Component){_inherits(MovieList,_React$Component);var _super=_createSuper(MovieList);function MovieList(){_classCallCheck(this,MovieList);return _super.apply(this,arguments);}_createClass(MovieList,[{key:\"render\",value:// Componente React que representa toda a área com os cards dos filmes. Será chamado dentro do Componente React de classe 'App'.\nfunction render(){var movies=this.props.movies;// Utilizando object destructuring para captar o array de objetos com informações de cada filme, que será passado via props.\nreturn/*#__PURE__*/React.createElement(\"main\",{className:\"movie-list\"},movies.map(function(mvObj){return/*#__PURE__*/React.createElement(MovieCard,{movie:mvObj,key:mvObj.title});}));}}]);return MovieList;}(React.Component);// OBS: Uma boa forma de se renderizar algo, no React, é a partir de um array com os elementos da página. Por esse motivo, utilizei a HOF .map() acima. Essa, será responsável pelo desenvolvimento de um componente React de classe MovieCard, para cada 'mvObj' presente dentro do array 'movies'.\n// PropTypes:\nexport default MovieList;","map":{"version":3,"sources":["/home/joaofelipe/joaofelipelliccione_projetos-trybe/2-Frontend/trybe_frontend_2-movie_cards/src/components/MovieList.jsx"],"names":["React","MovieCard","MovieList","movies","props","map","mvObj","title","Component"],"mappings":"wzBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,GAEMC,CAAAA,S,wPAAoC;AACxC,iBAAS,CACP,GAAQC,CAAAA,MAAR,CAAmB,KAAKC,KAAxB,CAAQD,MAAR,CAA+B;AAE/B,mBACE,4BAAM,SAAS,CAAC,YAAhB,EACIA,MAAM,CAACE,GAAP,CAAW,SAACC,KAAD,qBAAW,oBAAC,SAAD,EAAW,KAAK,CAAGA,KAAnB,CAA2B,GAAG,CAAGA,KAAK,CAACC,KAAvC,EAAX,EAAX,CADJ,CADF,CAKD,C,uBATqBP,KAAK,CAACQ,S,EAY9B;AAEA;AAKA,cAAeN,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component { // Componente React que representa toda a área com os cards dos filmes. Será chamado dentro do Componente React de classe 'App'.\n  render() {\n    const { movies } = this.props; // Utilizando object destructuring para captar o array de objetos com informações de cada filme, que será passado via props.\n\n    return (\n      <main className='movie-list'>\n        { movies.map((mvObj) => <MovieCard movie={ mvObj } key={ mvObj.title } />) }\n      </main>\n    );\n  }\n}\n\n// OBS: Uma boa forma de se renderizar algo, no React, é a partir de um array com os elementos da página. Por esse motivo, utilizei a HOF .map() acima. Essa, será responsável pelo desenvolvimento de um componente React de classe MovieCard, para cada 'mvObj' presente dentro do array 'movies'.\n\n// PropTypes:\nMovieList.propTypes = {\n  movies: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}