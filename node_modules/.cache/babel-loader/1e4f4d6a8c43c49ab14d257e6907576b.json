{"ast":null,"code":"var _jsxFileName = \"/home/joaofelipe/Curso-Trybe/trybe_projects/sd-015-a-project-movie-cards-library/src/components/MovieList.jsx\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  // Componente React que representa toda a área com os cards dos filmes. Será chamado dentro do Componente React de classe 'App'.\n  render() {\n    const {\n      movies\n    } = this.props; // Utilizando object destructuring para captar o array de objetos com informações de cada filme, que será passado via props.\n\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, movies.map(mvObj => /*#__PURE__*/React.createElement(MovieCard, {\n      movie: mvObj,\n      key: mvObj.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 33\n      }\n    })));\n  }\n\n} // OBS: Uma boa forma de se renderizar algo, no React, é a partir de um array com os elementos da página. Por esse motivo, utilizei a HOF .map() acima. Essa, será responsável pelo desenvolvimento de um componente React de classe MovieCard, para cada 'mvObj' presente dentro do array 'movies'.\n// PropTypes:\n\n\nMovieList.propTypes = {\n  movies: propTypes.arrayOf(propTypes.object).isRequired\n};\nexport default MovieList;","map":{"version":3,"sources":["/home/joaofelipe/Curso-Trybe/trybe_projects/sd-015-a-project-movie-cards-library/src/components/MovieList.jsx"],"names":["React","propTypes","MovieCard","MovieList","Component","render","movies","props","map","mvObj","title","arrayOf","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAE;AACxCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKC,KAAxB,CADO,CACwB;;AAE/B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,MAAM,CAACE,GAAP,CAAYC,KAAD,iBAAW,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGA,KAAnB;AAA2B,MAAA,GAAG,EAAGA,KAAK,CAACC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CADJ,CADF;AAKD;;AATqC,C,CAYxC;AAEA;;;AACAP,SAAS,CAACF,SAAV,GAAsB;AACpBK,EAAAA,MAAM,EAAEL,SAAS,CAACU,OAAV,CAAkBV,SAAS,CAACW,MAA5B,EAAoCC;AADxB,CAAtB;AAIA,eAAeV,SAAf","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component { // Componente React que representa toda a área com os cards dos filmes. Será chamado dentro do Componente React de classe 'App'.\n  render() {\n    const { movies } = this.props; // Utilizando object destructuring para captar o array de objetos com informações de cada filme, que será passado via props.\n\n    return (\n      <main>\n        { movies.map((mvObj) => <MovieCard movie={ mvObj } key={ mvObj.title } />) }\n      </main>\n    );\n  }\n}\n\n// OBS: Uma boa forma de se renderizar algo, no React, é a partir de um array com os elementos da página. Por esse motivo, utilizei a HOF .map() acima. Essa, será responsável pelo desenvolvimento de um componente React de classe MovieCard, para cada 'mvObj' presente dentro do array 'movies'.\n\n// PropTypes:\nMovieList.propTypes = {\n  movies: propTypes.arrayOf(propTypes.object).isRequired,\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}